### 设置###
log4j.rootLogger = debug,stdout,D,E

### 输出信息到控制抬 ###
log4j.appender.stdout = org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target = System.out
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern = [%-5p] %d{yyyy-MM-dd HH:mm:ss,SSS} method:%l%n%m%n

### 输出DEBUG 级别以上的日志到=C://logs/debug.log ###
log4j.appender.D = org.apache.log4j.DailyRollingFileAppender
log4j.appender.D.File = C://logs/debug.log
log4j.appender.D.Append = true
log4j.appender.D.Threshold = DEBUG 
log4j.appender.D.layout = org.apache.log4j.PatternLayout
log4j.appender.D.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n

### 输出WARN 级别以上的日志到=C://logs/warn.log ###
log4j.appender.W = org.apache.log4j.DailyRollingFileAppender
log4j.appender.W.File = C://logs/warn.log
log4j.appender.W.Append = true
log4j.appender.W.Threshold = WARN
log4j.appender.W.layout = org.apache.log4j.PatternLayout
log4j.appender.W.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n

### 输出ERROR 级别以上的日志到=C://logs/error.log ###
log4j.appender.E = org.apache.log4j.DailyRollingFileAppender
log4j.appender.E.File =C://logs/error.log 
log4j.appender.E.Append = true
log4j.appender.E.Threshold = ERROR 
log4j.appender.E.layout = org.apache.log4j.PatternLayout
log4j.appender.E.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n

### 补充日志内容 ###

### Log4j提供的几种appender方式 ###
### org.apache.log4j.ConsoleAppender（控制台），###
### org.apache.log4j.FileAppender（文件），  ###
### org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件），###
### org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件），###
### org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方） ###

### Log4j提供的几种layout布局方式 ###
### org.apache.log4j.HTMLLayout（以HTML表格形式布局），###
### org.apache.log4j.PatternLayout（可以灵活地指定布局模式），###
### org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串），###
### org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息）###